<TabItem x:Class="UiSon.ViewModel.ElementEditorTab"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
         xmlns:viewModelInterface="clr-namespace:UiSon.ViewModel.Interface;assembly=UiSon.ViewModel.Interface"
         xmlns:converter="clr-namespace:UiSon.Converter;assembly=UiSon.Converter"
         mc:Ignorable="d"
         Style="{DynamicResource TabItemStyle}">
    <TabItem.Resources>

        <!--data template selectors-->

        <viewModelInterface:ModuleTemplateSelector x:Key="templateSelector"/>
        
        <!--converters-->

        <converter:DebugConverter x:Key="debugConverter"/>
        <converter:PutInListConverter x:Key="putInListConverter"/>
        <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <converter:ModuleStateToBrushConverter x:Key="moduleStateToBrushConverter" NormalBrush="{DynamicResource NormalModuleBrush}"
                                                                                   ErrorBrush="{DynamicResource ErrorModuleBrush}"
                                                                                   SpecialBrush="{DynamicResource SpecialModuleBrush}"/>

        <!--contextMenu-->

        <ContextMenu x:Key="CopyPasteContextMenu">
            <MenuItem Header="{Binding Name}" IsEnabled="False"/>
            <Separator/>
            <MenuItem Header="Copy" Command="{Binding CopyCommand}" CommandParameter="{Binding}"/>
            <MenuItem Header="Paste" Command="{Binding PasteCommand}" CommandParameter="{Binding}"/>
            <Separator Visibility="{Binding HasError, Converter={StaticResource boolToVisibilityConverter}}"/>
            <MenuItem Header="Show Error" Command="{Binding ShowErrorCommand}" Visibility="{Binding HasError, Converter={StaticResource boolToVisibilityConverter}}" />
        </ContextMenu>

        <ToolTip x:Key="ErrorTooltip">
            <TextBlock Text="Error bud"/>
        </ToolTip>

        <!--borders-->

        <DataTemplate x:Key="NullableTemplate">
            <Border BorderThickness="4"
                    HorizontalAlignment="Stretch"
                    Margin="4"
                    CornerRadius="{DynamicResource GroupCornerRadius}"
                    BorderBrush="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}"
                    ContextMenu="{StaticResource CopyPasteContextMenu}">
                <Expander HorizontalAlignment="Stretch"
                          IsExpanded="{Binding IsExpanded}">
                    <Expander.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Margin="0,0,4,0"
                                       Grid.Column="0"
                                       Text="{Binding Name}"
                                       Foreground="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}"
                                       Visibility="{Binding IsNameVisible, Converter={StaticResource boolToVisibilityConverter}}"/>
                            <CheckBox Grid.Column="1"
                                      Foreground="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}"
                                      BorderBrush="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}"
                                      IsChecked="{Binding IsNull}"
                                      HorizontalContentAlignment="Left">
                                <CheckBox.Content>
                                    <TextBlock Margin="0,0,4,0"
                                               Text="null"
                                               Foreground="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}"/>
                                </CheckBox.Content>
                            </CheckBox>
                        </Grid>
                    </Expander.Header>
                    <ContentPresenter HorizontalAlignment="Stretch"
                                      Content="{Binding Decorated}"
                                      ContentTemplateSelector="{StaticResource templateSelector}"/>
                </Expander>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="BorderedTemplate">
            <Border BorderThickness="4"
                    HorizontalAlignment="Stretch"
                    Margin="4"
                    CornerRadius="{DynamicResource GroupCornerRadius}"
                    BorderBrush="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}">
                <Expander IsExpanded="True"
                          HorizontalAlignment="Stretch"
                          Header="{Binding Name}">
                    <ContentPresenter HorizontalAlignment="Stretch"
                                      Content="{Binding Decorated}"
                                      ContentTemplateSelector="{StaticResource templateSelector}"/>
                </Expander>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="BorderedValueTemplate">
            <Border BorderThickness="4"
                    HorizontalAlignment="Stretch"
                    Margin="4"
                    ContextMenu="{StaticResource CopyPasteContextMenu}"
                    CornerRadius="{DynamicResource GroupCornerRadius}"
                    BorderBrush="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}">
                <Expander IsExpanded="True"
                          HorizontalAlignment="Stretch"
                          Header="{Binding Name}">
                    <ContentPresenter HorizontalAlignment="Stretch"
                                      Content="{Binding Decorated}"
                                      ContentTemplateSelector="{StaticResource templateSelector}"/>
                </Expander>
            </Border>
        </DataTemplate>

        <!--entries-->

        <DataTemplate x:Key="CollectionEntryTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid Margin="4"
                      Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button Margin="0,8,4,0"
                            VerticalAlignment="top"
                            Grid.Column="0"
                            Grid.Row="0"
                            Command="{Binding RemoveElement}"
                            Content=" X "
                            Visibility="{Binding CanModifyCollection, Converter={StaticResource boolToVisibilityConverter}}"/>
                    <ContentPresenter Content="{Binding Decorated}"
                                      ContentTemplateSelector="{StaticResource templateSelector}"
                                      HorizontalAlignment="Stretch"
                                      Grid.Column="1"
                                      Grid.Row="0"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <!--groups-->

        <DataTemplate x:Key="GroupVerticalTemplate">
            <ItemsControl ItemsSource="{Binding Members}"
                          ItemTemplateSelector="{StaticResource templateSelector}"
                          HorizontalAlignment="Stretch">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DataTemplate>

        <DataTemplate x:Key="GroupHorizontalTemplate">
            <ItemsControl ItemsSource="{Binding Members}"
                          ItemTemplateSelector="{StaticResource templateSelector}"
                          HorizontalAlignment="Stretch">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DataTemplate>

        <DataTemplate x:Key="GroupWrapTemplate">
            <ItemsControl Grid.Column="1"
                          HorizontalAlignment="Stretch"
                          ItemsSource="{Binding Members}"
                          ItemTemplateSelector="{StaticResource templateSelector}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel HorizontalAlignment="Stretch" Margin="4"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DataTemplate>

        <DataTemplate x:Key="GroupGridTemplate">
            <DataGrid AutoGenerateColumns="False"
                      Margin="4"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      IsReadOnly="True"
                      HorizontalAlignment="Stretch"
                      ItemsSource="{Binding Converter={StaticResource putInListConverter}}"
                      Initialized="GridGroup_Initialized"/>
        </DataTemplate>

        <!--collections-->

        <DataTemplate x:Key="CollectionVerticalTemplate">
            <Grid Margin="4">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Button Grid.Row="0"
                        HorizontalAlignment="Left"
                        Content=" + "
                        Command="{Binding AddEntryCommand}"
                        Visibility="{Binding CanModifyCollection, Converter={StaticResource boolToVisibilityConverter}}"/>
                <Border Grid.Row="1"
                        BorderThickness="4"
                        CornerRadius="{DynamicResource CollectionCornerRadius}"
                        BorderBrush="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}">
                    <ItemsControl HorizontalAlignment="Stretch"
                                  ItemsSource="{Binding Entries}"
                                  ItemTemplate="{StaticResource CollectionEntryTemplate}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </Border>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="CollectionHorizontalTemplate">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" Margin="8,8,8,8">
                <Button HorizontalAlignment="Left"
                        Content=" + "
                        Command="{Binding AddEntryCommand}"
                        Visibility="{Binding CanModifyCollection, Converter={StaticResource boolToVisibilityConverter}}"/>
                <Border BorderThickness="4"
                        CornerRadius="{DynamicResource CollectionCornerRadius}"
                        BorderBrush="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}">
                    <ItemsControl HorizontalAlignment="Stretch"
                                  ItemsSource="{Binding Entries}"
                                  ItemTemplate="{StaticResource CollectionEntryTemplate}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </Border>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="CollectionWrapTemplate">
            <StackPanel Orientation="Vertical"
                        HorizontalAlignment="Stretch"
                        Margin="8">
                <Button HorizontalAlignment="Left"
                        Content=" + "
                        Command="{Binding AddEntryCommand}"
                        Visibility="{Binding CanModifyCollection, Converter={StaticResource boolToVisibilityConverter}}"/>
                <Border BorderThickness="4"
                        CornerRadius="{DynamicResource CollectionCornerRadius}"
                        BorderBrush="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}">
                    <ItemsControl HorizontalAlignment="Stretch"
                                  ItemsSource="{Binding Entries}"
                                  ItemTemplate="{StaticResource CollectionEntryTemplate}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel HorizontalAlignment="Stretch"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </Border>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="CollectionGridTemplate">
            <StackPanel Orientation="Vertical"
                        HorizontalAlignment="Stretch"
                        Margin="8">
                <Button HorizontalAlignment="Left"
                        Content=" + "
                        Command="{Binding AddEntryCommand}"
                        Visibility="{Binding CanModifyCollection, Converter={StaticResource boolToVisibilityConverter}}"/>
                <Border BorderThickness="4"
                        CornerRadius="{DynamicResource CollectionCornerRadius}"
                        BorderBrush="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}">
                    <DataGrid AutoGenerateColumns="False"
                          IsReadOnly="True"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          HorizontalAlignment="Stretch"
                          ItemTemplate="{StaticResource CollectionEntryTemplate}"
                          ItemsSource="{Binding Entries}" Initialized="DataGridCollection_Initialized">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content=" X "
                                            Command="{Binding RemoveElement}"
                                            Visibility="{Binding CanModifyCollection, Converter={StaticResource boolToVisibilityConverter}}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Border>
            </StackPanel>
        </DataTemplate>

        <!--editors-->
        
        <DataTemplate x:Key="TextBlockTemplate">
            <TextBlock Margin="4"
                       VerticalAlignment="Center"
                       Text="{Binding Value}"
                       Foreground="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}"/>
        </DataTemplate>

        <DataTemplate x:Key="TextEditTemplate">
            <Grid Margin="4" ContextMenu="{StaticResource CopyPasteContextMenu}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Margin="0,0,4,0"
                           Grid.Column="0"
                           Text="{Binding Name}"
                           Visibility="{Binding IsNameVisible, Converter={StaticResource boolToVisibilityConverter}}"
                           Foreground="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}"/>
                <TextBox TextWrapping="Wrap"
                         HorizontalAlignment="Stretch"
                         Grid.Column="1"
                         Text="{Binding Value}"
                         Foreground="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="SelectorTemplate">
            <Grid Margin="4" ContextMenu="{StaticResource CopyPasteContextMenu}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Margin="0,0,4,0"
                           Grid.Column="0"
                           VerticalAlignment="Center"
                           Text="{Binding Name}"
                           Foreground="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}"
                           Visibility="{Binding IsNameVisible, Converter={StaticResource boolToVisibilityConverter}}"/>
                <ComboBox HorizontalAlignment="Stretch"
                          Grid.Column="1"
                          VerticalAlignment="Center"
                          ItemsSource="{Binding Options}"
                          SelectedValue="{Binding Value, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}"
                                       Foreground="{Binding Path=DataContext.State,
                                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox},
                                                    Converter={StaticResource moduleStateToBrushConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="CheckBoxTemplate">
            <CheckBox Grid.Column="1"
                      Margin="0,4,4,4"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Left"
                      ContextMenu="{StaticResource CopyPasteContextMenu}"
                      IsChecked="{Binding Value}"
                      BorderBrush="{Binding State, Converter={StaticResource moduleStateToBrushConverter}}">
                <CheckBox.Content>
                    <TextBlock Margin="0,0,4,0"
                           Grid.Column="0"
                           VerticalAlignment="Center"
                           Text="{Binding Name}"
                           Visibility="{Binding IsNameVisible, Converter={StaticResource boolToVisibilityConverter}}"/>
                </CheckBox.Content>
            </CheckBox>
        </DataTemplate>

        <DataTemplate x:Key="SliderHorizontalTemplate">
            <Slider Margin="4"
                    MinWidth="100"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Orientation="Horizontal"
                    ContextMenu="{StaticResource CopyPasteContextMenu}"
                    Minimum="{Binding Min}"
                    Maximum="{Binding Max}"
                    Value="{Binding Value}"/>
        </DataTemplate>

        <DataTemplate x:Key="SliderVerticalTemplate">
            <Slider Margin="4"
                    MinHeight="100"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Center"
                    Orientation="Vertical"
                    ContextMenu="{StaticResource CopyPasteContextMenu}"
                    Minimum="{Binding Min}"
                    Maximum="{Binding Max}"
                    Value="{Binding Value}"/>
        </DataTemplate>

    </TabItem.Resources>
      
    <TabItem.Header>
        <Grid HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0"
                       Text="{Binding ElementName}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Stretch"/>
            <Button Click="CloseButton_Click"
                    Margin="4,0,0,0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"
                    Grid.Column="1"
                    Content=" X "/>
        </Grid>
    </TabItem.Header>

    <ScrollViewer HorizontalAlignment="Stretch">
        <Border BorderThickness="4"
                HorizontalAlignment="Stretch">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <TextBox FontWeight="Bold"
                         Grid.Column="0"
                         Margin="4"
                         Grid.Row="0"
                         Text="{Binding ElementName}"/>
                <Line Stretch="Fill" Stroke="{DynamicResource WindowForegroundBrush}" X2="1" Margin="4" Grid.Row="1"/>
                <ContentPresenter HorizontalAlignment="Stretch"
                                  Grid.Column="0"
                                  Grid.Row="2"
                                  Content="{Binding MainModule}"
                                  ContentTemplateSelector="{StaticResource templateSelector}"/>
            </Grid>
        </Border>
    </ScrollViewer>
    
</TabItem>
